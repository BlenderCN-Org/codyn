# multiplication

## 12
test_multiply_1 = "3 * 4"

## 2 4 3 5
test_multiply_2 = "[1, 0; 0, 1] * [2, 3; 4, 5]"

## 2 0 0 5
test_multiply_3 = "[1, 0; 0, 1] .* [2, 3; 4, 5]"

# plus
    ## 7
    test_plus_1 = "3 + 4"

    ## 4 6
    test_plus_2 = "[1, 2] + [3, 4]"

# minus
    ## -1
    test_minus_1 = "3 - 4"

    ## -2 -2
    test_minus_2 = "[1, 2] - [3, 4]"

    ## -1
    test_minus_3 = "3 + -4"

# priority
    ## 14
    test_priority_1 = "3 * 4 + 2"

    ## 11
    test_priority_2 = "3 + 4 * 2"

# scientific notation
    ## 1e-2
    test_scientific_notation_1 = "1e-2"

    ## 1e+30
    test_scientific_notation_2 = "1e+30"

    ## 1.25e-5
    test_scientific_notation_3 = "1.25e-5"

    ## 10.2523e+4
    test_scientific_notation_4 = "10.2523e+4"

# clip function
    ## 1
    test_clip_1 = "clip(0.2, 1, 10)"

    ## 10
    test_clip_2 = "clip(12, 1, 10)"

    ## 0.2
    test_clip_3 = "clip(0.2, -1, 10)"

    ## 1 5.2 10
    test_clip_4 = "clip([0.1, 5.2, 12], 1, 10)"

    ## 1 3 10
    test_clip_5 = "clip([0.1, 3, 13], [1, 2, 3], 10)"

    ## 1 3 10
    test_clip_6 = "clip([0.1, 3, 13], [1; 2; 3], 10)"

    ## 10 10 15 15
    test_clip_7 = "clip(15, 1, [10, 20; 10, 30])"

# cycle function
    ## 9.2
    test_cycle_1 = "cycle(0.2, 1, 10)"

    ## 3
    test_cycle_2 = "cycle(12, 1, 10)"

    ## 0.2
    test_cycle_3 = "cycle(0.2, -1, 10)"

    ## -3.8
    test_cycle_4 = "cycle(0.2, -5, -1)"

    ## 9.1 5.2 3
    test_cycle_5 = "cycle([0.1, 5.2, 12], 1, 10)"

    ## 9.1 3 6
    test_cycle_6 = "cycle([0.1, 3, 13], [1, 2, 3], 10)"

    ## 9.1 3 6
    test_cycle_7 = "cycle([0.1, 3, 13], [1; 2; 3], 10)"

    ## 6 6 15 5
    test_cycle_8 = "cycle(15, 1, [10, 20; 10, 11])"

# lerp function
    ## 2.8
    test_lerp_1 = "lerp(0.2, 1, 10)"

    ## 1.9 2.8 3.7
    test_lerp_2 = "lerp([0.1, 0.2, 0.3], 1, 10)"

    ## 1.9 3.6 5.1
    test_lerp_3 = "lerp([0.1, 0.2, 0.3], [1, 2, 3], 10)"

    ## 1.9 3.6 5.1
    test_lerp_4 = "lerp([0.1, 0.2, 0.3], [1; 2; 3], 10)"

    ## 1.9 1.9 2.9 3.9
    test_lerp_5 = "lerp(0.1, 1, [10, 20; 10, 30])"

# vi:ts=4:et
