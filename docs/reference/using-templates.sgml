<?xml version="1.0" encoding="utf-8"?>
<refentry id="using-templates">
<refmeta>
<refentrytitle>Using Templates</refentrytitle>
</refmeta>

<refnamediv>
<refname>Using Templates</refname>
<refpurpose>
How to use template definitions in networks
</refpurpose>
</refnamediv>

<refsect1>
<title>Using Templates</title>
<para>
As soon as you start making larger networks, for instance with coupled
oscillators, you will notice that you are duplicating a lot of states and 
links with common properties and actions. To somewhat assist this, you can
define template objects in your network. These objects represent basic
templates on which you can base new objects. Internally, when you instantiate
a new object from a template, the template simply gets copied and you can then
add/remove or change any properties on it to model the specific instance of
that object.
</para>
<para>
To add a template programmatically to the network, you can use
<link linkend="cdn-node-add">cdn_node_add</link> to the template group
of the network (<link linkend="codyn-get-template-group">codyn_get_template_group</link>) which
simply takes an object. Similarly you can remove a template from the network
using <link linkend="cdn-node-remove">cdn_node_remove</link>.
The XML specification also supports specifying templates similar to specifying
normal states and links, but in a separate <emphasis>templates</emphasis>
section (see <link linkend="xml-specification">CDN Network XML specification</link>).
</para>
<para>
When you have some templates defined in your network, you can instantiate
new objects from them by using 
<link linkend="codyn-add-from-template">codyn_add_from_template</link>.
This adds a new object to the network based on the specified template and
returns that object. You can than manipulate it as usual. Adding a link from
a template is done using <link linkend="codyn-add-link-from-template">
codyn_add_link_from_template</link>. Here you specify the 
<emphasis>from</emphasis> and <emphasis>to</emphasis> objects of the link.
</para>
</refsect1>
</refentry>
