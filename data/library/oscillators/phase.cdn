templates
{
    node "oscillator"
    {
        ## Desired amplitude
        target_amplitude = 1

        ## Desired frequency
        target_frequency = 1

        ## Amplitude squared
        r2 = "r²"

        ## Generic time constant.
        γ = 1

        ## Time constant on attractor of r towards the target amplitude. Use
        ## γForRelConv to compute a γ value corresponding to a
        ## certain speed of convergence
        γ_r = "γ"

        ## Angular frequency
        ω = "2 ∙ π ∙ target_frequency"

        ## Phase node variable
        φ̇ = "ω"

        ## Amplitude node variable
        ṙ = "γ_r ∙ (target_amplitude - r) ∙ r"

        ## Output variable
        χ = "r ∙ cos(φ)"

        ## Function for γ such that it takes <i>τ</i> seconds to
        ## forget a perturbation of size (1 - <i>α</i>) * <i>δ</i>
        ##
        ## This function can be used for γ on the initial conditions of the
        ## oscillator nodes so there is a known behavior of convergence from
        ## initial conditions.
        γForRelConv(τ, α, δ) = "√(ln(α / δ) / -τ)"
    }

    import "polar.cdn" as "polar"

    ## Convenient alias for polar phase coupling
    edge "coupling" : "polar" . "polar_phase_coupling" {}

    include "layout/line.cdn"
}

# vi:ex:ts=4:et
