templates
{
    include "hopf_functions.cpg"

    group "oscillator"
    {
        [proxy]
        state "state"
        {
            ## r state variable of Hopf oscillator
            r = 1 | integrated

            ## theta state variable of Hopf oscillator
            theta = 0 | integrated


            ## Desired amplitude
            ## Unused if you define mu directly.
            target_amplitude = 1

            ## Desired frequency
            target_frequency = 1


            ## Instantaneous amplitude
            amplitude = "r"


            ## Desired mu
            ## Controlls the Hopf bifurcation.
            ## With positive mu, the dynamical system will oscillate with amplitude sqrt(mu). 
            ## With negative mu, the system will have a stable fix point at r = 0.
            mu = "target_amplitude * target_amplitude"


            ## Gain on amplitude
            gamma = 1


            ## Angular frequency
            omega = "2 * pi * target_frequency"

            ## Amplitude squared
            r2 = "r * r"


            ## Output variable
            output = "r * cos(theta)"
        }

        link "integrate" on "state"
        {
            r <= "gamma * (mu - r2) * r"
            theta <= "omega"
        }
    }
}
