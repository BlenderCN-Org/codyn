defines
{
    # Find all nodes with the physics.body template applied
    bodies = has-template("physics" . "body")

    # Calculate a list of dof for each body
    bodydof = | @bodies
              | if (applied-templates | recurse(applied-templates) | /dof([1-6])/ | last)
              | append-context("@1")

    # Calculate a cumulative sum of the dofs (gives index for each body when
    # dofs are collapsed)
    bodydofidx = "{@bodydof|@cnt[+@0]}"

    # The total dofs in the system
    numdof = "@{@bodydof||$(@0 + @1)}"

    # List of comma separated indices for each body the chain of body indices
    # up to the root
    bodychain = | @bodies
                | if(recurse(inputs | has-template(physics.joint) | input) |
                     name |
                     append-context("@bodies[!@0]") |
                     reduce(last, "@0,@@@0"))

    # Construct list of parent indices for each body
    parents = | @bodies
              | if (inputs | has-template(physics.joint) | input | name | append-context("@bodies[!@0]"),
                              append-context("-1"))

    # Construct list of parent indices for each dof
    parentsdof = "{@bodies|@bodydof[$(@0[!] + 1)]*@parents[$(@0[!] + 1)]}"
}

# vi:ex:ts=4:et
