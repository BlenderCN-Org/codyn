#g = 9.81
g = 1

integrator
{
    method = "runge-kutta"
    initial-phase = "air"
}

node "monopod"
{
    defines
    {
        q = "{x,y,φ,α,l}"
        q̇ = "{ẋ,ẏ,φ̇,α̇,l̇}"
        q̈ = "{ẍ,ÿ,φ̈,α̈,l̈}"
    }

    # Masses
    "m{1:3}" = "{0.85,0.10,0.05}"

    # Mass locations
    m1T = "[x; y; φ]"
    m2T = "[x + l2 ∙ sin(θ); y - l2 ∙ cos(θ); θ]"
    m3T = "[x + (l - l3) ∙ sin(θ); y - (l - l3) ∙ cos(θ); θ]"

    # Inertia
    "J{1:3}" = "{0.4,0.002,0.002}"

    # Lengths
    "l{2,3}" = "{0.25,0.25}"

    # Foot position
    rfoot = "0.05"

    # Stiffness constants and damping ratios
    kα = 5
    b̂α = 0.2
    kl = 15
    b̂l = 0.2

    Jtot = "J2 + m2 ∙ l2² + J3 + m3 ∙ (l0 - l3)²"

    # Damping constants calculated from damping ratios
    bl = "b̂l ∙ 2 ∙ √(kl ∙ mtot)"
    bα = "b̂α ∙ 2 ∙ √(kα ∙ Jtot)"

    l0 = 1
    α0 = 0

    # States
    @q = "{0,1.1,0,0,l0}"
    "d@q" = "{0,0,0,0,0}"

    q = "[{@q||@0;@1}]"
    q̇ = "[{@q̇||@0;@1}]"

    # Note that we map q̇ on dq variables because the dq variables will be
    # introduced by the double integration (see end of file)
    @q̇ = "d@q"

    # Default generalized forces are 0
    "τ@q" = "{@q[~]*0}"
    τ = "[{@q|τ@0||@0;@1}]"

    # Auxilary and common terms
    ##########################################################################
        θ = "α + φ"
        c1 = "m2 ∙ l2 + m3 ∙ (l - l3)"
        cθ = "cos(θ)"
        sθ = "sin(θ)"

        c1c = "c1 ∙ cθ"
        c1s = "c1 ∙ sθ"

        c2 = "m3 ∙ (l - l3)² + m2 ∙ l2² + J2 + J3"
        m3s = "m3 ∙ sθ"
        m3c = "-m3 ∙ cθ"
        mtot = "m1 + m2 + m3"

        θ̇ = "α̇ + φ̇"
        c3 = "2 ∙ φ̇ ∙ (α̇ + l̇) ∙ m3 ∙ (l - l3) + c1 ∙ g ∙ sθ"
    ##########################################################################

    # Mass matrix
    M = "[mtot, 0,    c1c,     c1c, m3s;
          0,    mtot, c1s,     c1s, m3c;
          c1c,  c1s,  c2 + J1, c2,   0;
          c1c,  c1s,  c2,      c2,   0;
          m3s,  m3c,  0,       0,    m3]"

    # H matrix
    h = "[θ̇ ∙ (2 ∙ l̇ ∙ m3 ∙ cθ - θ̇ ∙ c1s);
          mtot ∙ g + 2 ∙ θ̇ ∙ m3 ∙ l̇ ∙ sθ + (α̇ + φ̇)² ∙ c1c;
          c3;
          c3;
          -m3 ∙ (g ∙ cθ + (α̇ + φ̇)² ∙ (l - l3))]"

    input-file "actuation.txt" as "actuation" {}

    # Passive forces on α and φ from the series elastic element
    τα = "kα ∙ (α0 + actuation.ua - α) + bα ∙ (actuation.uda - α̇)"
    τl = "kl ∙ (l0 + actuation.ul - l) + bl ∙ (actuation.udl - l̇)"

    # Set acceleration variables
    @q̈ = "0"

    # Double prime is a short hand for defining a second order system
    @q'' = "@q̈"

    rc = "[x + l ∙ sθ; y - rfoot - l ∙ cθ]"

    # Contact jacobian
        Jc_tmp1 = "rfoot + l ∙ cθ"
        Jc_tmp2 = "l ∙ sθ"

    Jc = "[1, 0, Jc_tmp1, Jc_tmp1,  sθ;
           0, 1, Jc_tmp2, Jc_tmp2, -cθ]"

    JcT = "Jcᵀ"
    Minv = "inverse(M)"

    # Contact jacobian time derivative
        J̇c_tmp1 = "l̇ ∙ cθ - l ∙ θ̇ ∙ sθ"
        J̇c_tmp2 = "l̇ ∙ sθ + l ∙ θ̇ ∙ cθ"

    J̇c = "[0, 0, J̇c_tmp1, J̇c_tmp1, θ̇ ∙ cθ;
           0, 0, J̇c_tmp2, J̇c_tmp2, θ̇ ∙ sθ]"

    # Solve for the contact force
    Fc = "linsolve(Jc ∙ Minv ∙ JcT, Jc ∙ Minv ∙ (h - τ) - J̇c ∙ q̇)"

    "phase" = 2

    phase "air" to "ground" when < "rc[1]"
    {
        q̇_after = "-Minv ∙ (JcT ∙ inverse(Jc ∙ Minv ∙ JcT) ∙ (Jc ∙ q̇)) + q̇"

        set "d@q" = "q̇_after[@0[!]]"
        set "phase" = 1
    }

    Ftsh = "0.001"

    phase "ground" to "air" when < "Fc[1] - Ftsh"
    {
        set "phase" = 2
    }
}

templates
{
    edge "eom"
    {
        @q̈ <= "accelerations[@0[!]]"
    }
}

edge "ground" on "monopod" phase "ground" : "eom"
{
    # Accelerations
    accelerations = "linsolve(M, -h + τ + JcT ∙ Fc)"
}

edge "air" on "monopod" phase "air" : "eom"
{
    # Accelerations, there are no contact forces in the air
    accelerations = "linsolve(M, -h + τ)"
}

# vi:ex:ts=4:et
