[once] include "spatial.cdn"
[once] include "geometry.cdn"

g = "[0, 9.81, 0]"

templates
{
node "physics"
{
    node "body"
    {
        ## Mass of the body
        m   = "0"

        ## Center of Mass of the body: 1-by-3
        com = "zeros(1, 3)"

        ## Inertia matrix of the body: 3-by-3
        I   = "zeros(3, 3)"

        ## Generalized force on the DOF of this body
        τ = "0"

        ## Coordinate transform from the parent frame to the child frame. The
        ## product of this transform with the joint transform is the
        ## total coordinate transformation from a parent frame to a child frame
        coordinateTransform = "eye(6)"

        ## Spatial joint transformation (i.e. the transformation induced by the
        ## DOF of the joint)
        jointTransform = "eye(6)"

        ## The total transform from parent frame to body frame
        transform = "jointTransform ∙ coordinateTransform"

        ## External force on this body (6-by-1)
        fext = "zeros(6, 1)"

        ## Spatial motion subspace. This 6d vector is multiplied with the
        ## joint velocity to result in the velocity across the joint (i.e. a
        ## map from the joint coordinate velocity q̇ to the body velocity)
        ## [θx; θy; θz; x; y; z]
        motionSubspace = "zeros(6, 1)"

        ## Spatial inertia given mass, center of mass and inertia
        spI = "Sp.Inertia(com, m, I)"

        ## Velocity across the joint
        jointVelocity = "motionSubspace ∙ dq"

        ## Body velocity, defaults to joint velocity
        velocity = "jointVelocity"

        ## Body acceleration due to gravitational and coriolos effects,
        ## defaults to gravity
        acceleration = "transform ∙ [0; 0; 0; gᵀ]"

        ## Transform from the base to the joint
        baseTransform = "transform"

        ## Jacobian column for this body
        J = "Sp.Inverse(baseTransform) ∙ motionSubspace"

        ## State variable of this body
        q'' = "0"
    }

    edge "joint"
    {
        baseTransform <= "output.transform ∙ baseTransform"
    }

    node "revolute" : "body"
    {
        jointTransform = "Sp.RotateZ(q)"
        motionSubspace = "[0; 0; 1; 0; 0; 0]"
    }

    node "prismatic" : "body"
    {
        jointTransform = "Sp.Translate([0, 0, q])"
        motionSubspace = "[0; 0; 0; 0; 0; 1]"
    }
}
}

# vi:ex:ts=4:et
