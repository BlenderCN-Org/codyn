integrator
{
    ## Use runge-kutta 4th order integration
    method = "runge-kutta"
}

g = 9.81

## Basic SLIP (Spring Loaded Inverted Pendulum) model. Parameter values in this
## file come from [1].
node "slip"
{
    initial-state "air"

    ## Leg length (rest position of the spring)
    l = 1

    ## Angle of attack
    aoa = "(90 - 68) / 180 ∙ pi"

    ## Mass
    m = 80

    ## Spring stiffness
    k = "20000"

    ## Mass position @@1
    "{x,y}" = "{0,l}" | integrated

    ## Mass velocity @@1
    "d{x,y}" = "{5,0}" | integrated

    ## Indicate second order system. Default differential equations are simply
    ## 0. We will add separate equations for the different phases later so
    ## we can enable/disable them. Note that this automatically sets up the
    ## second order system as a set of first order differential equations by
    ## introducing two new variables 'dx' and 'dy' (whith ẋ = dx and ẏ = dy)
    "{ẍ,ÿ}" = 0

    ## Ground contact position. This gets updated when we switch from air phase
    ## to ground phase
    xc = 0

    ## Variable which calculates the current leg length based on the node and
    ## xc (the ground contact point).
    leglength = "√((x - xc)² + y²)"

    ## Spring force (proportional to the difference between the rest length
    ## and the current length of the leg). This force is only meaningful in the
    ## ground phase
    fspring = "k ∙ (l - leglength)"

    ## The current angle of the leg, given the ground contact point xc
    aol = "atan2(xc - x, y)"

    ## Kinetic energy of the mass and the spring
    kinetic = "0.5 ∙ m ∙ sqsum(dx, dy)"

    ## Potential energy of the spring. Note that there is only energy stored
    ## in the spring when the leg is on the ground
    potential_spring = "(l - leglength > 0) ∙ 0.5 ∙ k ∙ (l - leglength)²"

    ## Potential energy of the mass and the spring. 
    potential = "m ∙ g ∙ y + potential_spring"

    ## Total energy
    energy = "kinetic + potential"

    ## Number of steps taken
    steps = 0

    ## Transition from air to ground when the end point of the leg
    ## (considering the desired angle of attack, aoa) would go through the
    ## ground. Note that the event is triggered on a negative zero crossing
    event "air" to "ground" when "y < l ∙ cos(aoa)"
    {
        ## Calculate the position of the leg on impact and store this in xc
        set xc = "x + l ∙ sin(aoa)"
        set steps = "steps + 1"
    }

    ## Transition from ground to air when the calculated leglength becomes
    ## larger than the zero leg length (i.e. the spring is fully extended).
    event "ground" to "air" when "leglength > l" {}

    ## Differential equations for the air phase. In the air, the motion of the SLIP
    ## model is simply balistic (i.e. only gravity working on the mass)
    dy' = "-g" state "air"

    ## x'' = projected(FSpring, X) / m
    dx' = "(-sin(aol) ∙ fspring) / m" state "ground"

    ## y'' = projected(FSpring, Y) / m - g
    dy' = "(cos(aol) ∙ fspring) / m - g" state "ground"
}

# [1] Seyfarth, A. & Geyer, H. & Günther, M. & Blickhan, R. (2002).
#     A movement criterion for running. Journal of Biomechanics,35, 649—655.

# vi:ex:ts=4:et
