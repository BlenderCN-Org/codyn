node "Geometry"
{
    ## Inertia matrix of a box.
    ##   m: mass of the box.
    ##   w: width of the box (x).
    ##   h: height of the box (y).
    ##   d: depth of the box (z).
    IBox(m, w, h, d) = "[
        1 / 12 ∙ m ∙ (h² + d²), 0,                      0;
        0,                      1 / 12 ∙ m ∙ (w² + d²), 0;
        0,                      0,                      1 / 12 ∙ m ∙ (w² + h²)
    ]"

    ISym(ixx, ixy, ixz, iyy, iyz, izz) = "[
        ixx, ixy, ixz;
        ixy, iyy, iyz;
        iyz, iyz, izz
    ]"

    ## Diagonal inertia matrix.
    ##   c: the diagonal inertia component.
    IDiag(c) = "[c, 0, 0;
                 0, c, 0;
                 0, 0, c]"

    ## Inertia matrix of a sphere.
    ##   m: the mass of the sphere.
    ##   r: the radius of the sphere.
    ISphere(m, r) = "IDiag(2 / 5 ∙ m ∙ r²)"

    ## Inertia matrix of a cylinder.
    ##   m: the mass of the cylinder.
    ##   r: the radius of the cylinder.
    ##   h: the height of the cylinder (z).
    ICylinder(m, r, h) = "[
        1 / 12 ∙ m ∙ (3 ∙ r² + h²), 0,                          0;
        0,                          1 / 12 ∙ m ∙ (3 ∙ r² + h²), 0;
        0,                          0,                          0.5 ∙ m ∙ r²
    ]"

    ## Inertia matrix of a rod.
    ##   m: the mass of the rod.
    ##   l: the length of the rod (y).
    IRod(m, l) = "[
        1 / 12 ∙ m ∙ l², 0, 0;
        0,               0, 0;
        0,               0, 1 / 12 ∙ m ∙ l²
    ]"

    Rotate(θ) = "RotateX(θ[0]) ∙ RotateY(θ[1]) ∙ RotateZ(θ[2])"

    ## 3-by-3 rotation matrix for rotation around the x-axis.
    ##   θ: the rotation angle.
    RotateX(θ) = "[1,  0,       0;
                   0,  cos(θ), sin(θ);
                   0, -sin(θ), cos(θ)]"

    ## 3-by-3 rotation matrix for rotation around the y-axis.
    ##   θ: the rotation angle.
    RotateY(θ) = "[cos(θ), 0, -sin(θ);
                   0,      1,  0;
                   sin(θ), 0,  cos(θ)]"

    ## 3-by-3 rotation matrix for rotation around the z-axis.
    ##   θ: the rotation angle.
    RotateZ(θ) = "[ cos(θ), sin(θ), 0;
                   -sin(θ), cos(θ), 0;
                    0,      0,      1]"

    ## 3x3 rotation matrix for rotation around an arbitrary axis.
    ##   u: the axis around which to rotate.
    ##   θ: the rotation angle.
    RotationFromAxisAngle(u, θ) = "[
        1 - mc + u[0]² ∙ mc, u[0] ∙ u[1] ∙ mc -uzs, u[0] ∙ u[2] ∙ mc + uys;
        u[1] ∙ u[0] ∙ mc + uzs, -mc + 1 + u[1]² ∙ mc, u[1] ∙ u[2] ∙ mc - uxs;
        u[2] ∙ u[0] ∙ mc - yus, u[2] ∙ u[1] ∙ mc + uxs, 1 - mc + u[2]² ∙ mc
    ]"
    {
        mc = "1 - cos(θ)"
        uxs = "u[2] ∙ sin(θ)"
        uys = "u[1] ∙ sin(θ)"
        uzs = "u[2] ∙ sin(θ)"
    }
}

# vi:ex:ts=4:et
