#!/usr/bin/python

import inspect, os, shutil, subprocess, fnmatch

def find_deps(libname, prefix):
    q = [os.path.realpath(libname)]
    seen = {}
    ret = {}
    depmap = {}

    while len(q) > 0:
        l = q[0]
        q = q[1:]

        seen[l] = True

        out = subprocess.check_output(['otool', '-L', l])
        libs = out.splitlines()[2:]

        depmap[l] = []

        for ll in libs:
            orig = ll.strip().split(' ')[0]
            ll = os.path.realpath(orig)

            if ll.startswith(prefix):
                depmap[l].append(orig)

                if not ll in seen:
                    ret[orig] = ll
                    seen[ll] = True
                    q.append(ll)

    return ret, depmap

j = os.path.join
d = os.path.dirname(os.path.abspath(inspect.getfile(inspect.currentframe())))

fw = j(d, 'Codyn.framework.new')
inst = j(d, 'install')

shutil.rmtree(fw, ignore_errors=True)
os.makedirs(fw)

# Setup framework symlinks
for i in ('Resources', 'Libraries'):
    os.makedirs(j(fw, 'Versions', 'A', i))
    os.symlink(j('Versions', 'Current', i), j(fw, i))

os.symlink(j('Versions', 'Current', 'Headers'), j(fw, 'Headers'))

# Link current version to A
os.symlink('A', j(fw, 'Versions', 'Current'))

libcdn = j(inst, 'lib', 'libcodyn-3.0.0.dylib')

# Copy main codyn lib
shlib = j(fw, 'Versions', 'A', 'Codyn')
shutil.copyfile(libcdn, shlib)
os.symlink(j('Versions', 'Current', 'Codyn'), j(fw, 'Codyn'))

# Copy library dependencies
deps, depmap = find_deps(libcdn, d)

libs = '/System/Library/Frameworks/Codyn.framework/Versions/A'

def fix_names(target, newid, deps):
    subprocess.call(['install_name_tool', '-id', j(libs, newid), target])

    for i in deps:
        subprocess.call(['install_name_tool', '-change', i, j(libs, 'Libraries', os.path.basename(i)), target])

for dep in deps:
    real = deps[dep]
    bname = os.path.basename(real)

    target = j(fw, 'Versions', 'A', 'Libraries', os.path.basename(real))
    shutil.copyfile(real, target)

    fix_names(target, j('Libraries', bname), depmap[real])

fix_names(j(fw, 'Codyn'), 'Codyn', depmap[libcdn])

# Copy headers
shutil.copytree(j(inst, 'include', 'codyn-3.0', 'codyn'), j(fw, 'Versions', 'A', 'Headers'))

exth = j(fw, 'Versions', 'A', 'Headers', 'ext')
os.makedirs(exth)

# Copy dependency headers
shutil.copytree(j(d, 'brew', 'include', 'glib-2.0'), j(exth, 'glib-2.0'))
shutil.copy(j(d, 'brew', 'lib', 'glib-2.0', 'include', 'glibconfig.h'), j(exth, 'glib-2.0'))

for root, dirnames, filenames in os.walk(j(fw, 'Versions', 'A', 'Headers')):
    for filename in fnmatch.filter(filenames, '*.h'):
        subprocess.call(['sed', '-i', '', '-E', '-e', 's/#include[ \t]*<(gio|glib|gobject|gmodule)/#include <Codyn\/ext\/glib-2.0\/\\1/g', '-e', 's/#include <codyn/#include <Codyn/g', os.path.join(root, filename)])

# Copy info
shutil.copyfile(j(d, 'Info.plist'), j(fw, 'Resources', 'Info.plist'))

target = j(d, 'Codyn.framework')

shutil.rmtree(target, ignore_errors=True)
shutil.move(fw, target)

# vi:ts=4:et
