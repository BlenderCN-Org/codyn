defines
{
    # Find all the bodies here
    bodies = self . has-template("body")
}

[each(edges | has-template("joint") | source-name | sink-name)]
{
    edge "dynamics_@0_to_@@0" from "@@0" to "@@@@0" : "dynamics" {}
}

[each(@bodies)]
{
    "fh_@0[!]_@0[!]" = "@@0.IC ∙ @@0.qS"
}

τ = "[{@bodies|@0.τ||@0;@1}]"
C = "[{@bodies|@0.C||@0;@1}]"

defines
{
    row = "{@bodies[~]*0||@0\\\,@1}"
}

H = "[{@bodies[~]*@row1||@0;@1}]"

# Open the nodes
node "@bodies"
{
    # For each body, find the ancestor path etc
    parse "crba.cdn"
    {
        leaf = @@0[!]
        index = @@0[!]
        prindex = @@0[!]

        current = @@0
    }
}

q̈ = "linsolve(H, τ - C)"

# Integrate accelerations on bodies
[each(@bodies)]
{
    edge "acceleration_@0" on "@@0"
    {
        dq <= "q̈[@@@@0[!]]"
    }
}


# vi:ex:ts=4:et
