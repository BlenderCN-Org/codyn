# Some helper defines, assuming 'coordinates' exists as list of coordinates
defines
{
	q = "{@coordinates}"

	# Define utilities for expansion
	dq  = "{@q|@0'}"
	ddq = "{@dq|@0'}"
	qdq = "{@q,@dq}"
	qdqddq = "{@q,@dq,@ddq}"
}

# coordinates
# Define functions for describing mass position as function of generalized
group has-template("body")
{
	"D{X,Y}"(@qdq) = "diff[@1](@qdq[,])"

	## Kinetic energy
	T(@qdq) = "0.5 * m * sqsum(DX(@qdq[,]), DY(@qdq[,]))"

	## Potential energy
	V(@qdq) = "-m * g * Y(@q[,])"

	## Partial of kinetic energy towards @1'
	"DTdd@q"(@qdq) = "pdiff[T, @1'](@qdq[,])"

	## Partial of @1 towards @2
	"D{T,V}d@q"(@qdq) = "pdiff[@1, @2](@qdq[,])"

	# Total differential of T towards time
	"DdTdd@[q]dt"(@qdqddq) = "diff[DTdd@1](@qdqddq[,])"

	## Euler lagrange equation for @1
	"EL@q"(@qdqddq) = "DdTdd@1dt(@qdqddq[,]) - DTd@1(@qdq[,]) + DVd@1(@qdq[,])"

	kinetic = "T(@qdq[,])"
	potential = "V(@qdq[,])"
	energy = "kinetic + potential"

	velocity_x = "DX(@qdq[,])"
	velocity_y = "DY(@qdq[,])"

	position_x = "X(@q[,])"
	position_y = "Y(@q[,])"

	layout
	{
		functions | count at 0, $(@0[!] * 3)
	}
}

defines
{
	bodies = has-template("body")
}

functions
{
	## Combined energy @1
	"{T,V}"(@qdq) = "{@bodies|@0.@@@0(@qdq[,])||@0 + @1}"

	## Combined euler lagrange equation for @1
	"EL{@q}"(@qdqddq) = "{@bodies|@0.@@@0(@qdqddq[,])||@0 + @1} - f@1"

	## Accelerations of system
	Acceleration(@qdq, idx) = "linsolve[{@q|EL@0||@0\,@1};@ddq[,]][idx](@qdq[,])"
	"Acceleration@q"(@qdq) = "Acceleration(@qdq[,], @0[!])"
}

kinetic = "T(@qdq[,])"
potential = "V(@qdq[,])"
energy = "kinetic + potential"

@q' = "d@0"
@q'' = "Acceleration@1(@qdq[,])"

"f@q" ?= 0

layout
{
	functions | count at 0, $(@0[!] * 3)
	groups | count at 8, $(@0[!] * 3)
}
